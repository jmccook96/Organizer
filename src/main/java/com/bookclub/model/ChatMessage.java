package com.bookclub.model;

public class ChatMessage {
    private int messageId;
    private String authorUsername;
    private int chatId; // Or bookclubId
    private String messageContent;
    private String timestamp;

    /**
     * Constructor for full suite of fields.
     *
     * @param messageId       The unique ID for this message (autogenerated).
     * @param chatId          The ID of the chat to which this message belongs.
     * @param authorUsername  The username of the user who authored the message.
     * @param message         The actual message content.
     * @param timestamp       The time at which the message was sent.
     *
     * @throws IllegalArgumentException If chatId is invalid or authorUsername is null or empty.
     */
    public ChatMessage(int messageId, int chatId, String authorUsername, String message, String timestamp) {
        setMessageId(messageId);
        setChatId(chatId);
        setAuthorUsername(authorUsername);
        setMessage(message);
        setTimestamp(timestamp);
    }

    /**
     * Constructor for non-automatically generated fields.
     *
     * @param authorUsername  The username of the user who authored the message.
     * @param chatId          The ID of the chat to which this message belongs.
     * @param message         The actual message content.
     *
     * @throws IllegalArgumentException If chatId is invalid or authorUsername is null or empty.
     */
    public ChatMessage(String authorUsername, int chatId, String message) {
        setChatId(chatId);
        setAuthorUsername(authorUsername);
        setMessage(message);
    }

    /**
     * Gets the unique ID of this message.
     * @return messageId The message ID.
     */
    public int getMessageId() { return messageId; }

    /**
     * Sets the unique ID of this message.
     * @param messageId The message ID.
     */
    public void setMessageId(int messageId) { this.messageId = messageId; }

    /**
     * Gets the ID of the chat to which this message belongs.
     * @return chatId The chat ID.
     */
    public int getChatId() { return chatId; }

    /**
     * Sets the ID of the chat to which this message belongs.
     * @param chatId The chat ID.
     *
     * @throws IllegalArgumentException If chatId is invalid.
     */
    public void setChatId(int chatId) {
        if (chatId <= 0)
            throw new IllegalArgumentException("chatId must be greater than 0.");
        this.chatId = chatId;
    }

    /**
     * Gets the username of the user who authored the message.
     * @return authorUsername The author's username.
     */
    public String getAuthorUsername() {
        return authorUsername;
    }

    /**
     * Sets the username of the user who authored the message.
     * @param authorUsername The author's username.
     *
     * @throws IllegalArgumentException If authorUsername is null or empty.
     */
    public void setAuthorUsername(String authorUsername) {
        if (authorUsername == null || authorUsername.trim().isEmpty())
            throw new IllegalArgumentException("authorUsername cannot be null or empty.");
        this.authorUsername = authorUsername;
    }

    /**
     * Gets the content of the message.
     * @return messageContent The message content.
     */
    public String getMessage() { return messageContent; }

    /**
     * Sets the content of the message.
     * @param message The message content.
     */
    public void setMessage(String message) { this.messageContent = message; }

    /**
     * Gets the timestamp when the message was sent.
     * @return timestamp The time the message was sent.
     */
    public String getTimestamp() { return timestamp; }

    /**
     * Sets the timestamp when the message was sent.
     * @param timestamp The time the message was sent.
     */
    public void setTimestamp(String timestamp) { this.timestamp = timestamp; }

    /**
     * Returns a string representation of the ChatMessage object
     *
     * @return String representation of the object.
     */
    @Override
    public String toString() {
        return "ChatMessage{" +
                "messageId=" + messageId +
                ", chatId=" + chatId +
                ", authorUsername='" + authorUsername + '\'' +
                ", message='" + messageContent + '\'' +
                ", timestamp='" + timestamp + '\'' +
                '}';
    }
}